<?php

/**
 * This is the model base class for the table "exam_subject".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ExamSubject".
 *
 * Columns in table "exam_subject" available as properties of the model,
 * followed by relations of table "exam_subject" available as properties of the model.
 *
 * @property string $id
 * @property string $name
 * @property string $name_en
 * @property string $exam_type_id
 * @property string $code
 * @property string $badge_color
 * @property integer $order_no
 *
 * @property ExamDefaultGrade[] $examDefaultGrades
 * @property ExamPrerequisite[] $examPrerequisites
 * @property ExamPrerequisite[] $examPrerequisites1
 * @property ExamScheduleItem[] $examScheduleItems
 * @property ExamSet[] $examSets
 * @property ExamType $examType
 * @property ExamSubjectTopic[] $examSubjectTopics
 * @property ExamTopic[] $examTopics
 */
abstract class BaseExamSubject extends ActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'exam_subject';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ExamSubject|ExamSubjects', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('exam_type_id', 'required'),
			array('order_no', 'numerical', 'integerOnly'=>true),
			array('name, name_en', 'length', 'max'=>60),
			array('exam_type_id', 'length', 'max'=>10),
			array('code', 'length', 'max'=>1),
			array('badge_color', 'length', 'max'=>7),
			array('name, name_en, code, badge_color, order_no', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, name_en, exam_type_id, code, badge_color, order_no', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'examDefaultGrades' => array(self::HAS_MANY, 'ExamDefaultGrade', 'exam_subject_id'),
			'examPrerequisites' => array(self::HAS_MANY, 'ExamPrerequisite', 'exam_subject_id'),
			'examPrerequisites1' => array(self::HAS_MANY, 'ExamPrerequisite', 'exam_subject_require_id'),
			'examScheduleItems' => array(self::HAS_MANY, 'ExamScheduleItem', 'exam_subject_id'),
			'examSets' => array(self::HAS_MANY, 'ExamSet', 'exam_subject_id'),
			'examType' => array(self::BELONGS_TO, 'ExamType', 'exam_type_id'),
			'examSubjectTopics' => array(self::HAS_MANY, 'ExamSubjectTopic', 'exam_subject_id'),
			'examTopics' => array(self::HAS_MANY, 'ExamTopic', 'exam_subject_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'name_en' => Yii::t('app', 'Name En'),
			'exam_type_id' => null,
			'code' => Yii::t('app', 'Code'),
			'badge_color' => Yii::t('app', 'Badge Color'),
			'order_no' => Yii::t('app', 'Order No'),
			'examDefaultGrades' => null,
			'examPrerequisites' => null,
			'examPrerequisites1' => null,
			'examScheduleItems' => null,
			'examSets' => null,
			'examType' => null,
			'examSubjectTopics' => null,
			'examTopics' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('name_en', $this->name_en, true);
		$criteria->compare('exam_type_id', $this->exam_type_id);
		$criteria->compare('code', $this->code, true);
		$criteria->compare('badge_color', $this->badge_color, true);
		$criteria->compare('order_no', $this->order_no);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}