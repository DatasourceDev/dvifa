<?php

/**
 * This is the model base class for the table "profile_change_type".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ProfileChangeType".
 *
 * Columns in table "profile_change_type" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property integer $account_id
 * @property integer $account_type_id_original
 * @property integer $account_type_id
 * @property string $created
 * @property string $modified
 *
 */
abstract class BaseProfileChangeType extends ActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'profile_change_type';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ProfileChangeType|ProfileChangeTypes', $n);
	}

	public static function representingColumn() {
		return 'created';
	}

	public function rules() {
		return array(
			array('account_id, account_type_id_original, account_type_id', 'numerical', 'integerOnly'=>true),
			array('created, modified', 'safe'),
			array('account_id, account_type_id_original, account_type_id, created, modified', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, account_id, account_type_id_original, account_type_id, created, modified', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'account_id' => Yii::t('app', 'Account'),
			'account_type_id_original' => Yii::t('app', 'Account Type Id Original'),
			'account_type_id' => Yii::t('app', 'Account Type'),
			'created' => Yii::t('app', 'Created'),
			'modified' => Yii::t('app', 'Modified'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('account_id', $this->account_id);
		$criteria->compare('account_type_id_original', $this->account_type_id_original);
		$criteria->compare('account_type_id', $this->account_type_id);
		$criteria->compare('created', $this->created, true);
		$criteria->compare('modified', $this->modified, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}