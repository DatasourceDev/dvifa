<?php

/**
 * This is the model base class for the table "omr_storage_data".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "OmrStorageData".
 *
 * Columns in table "omr_storage_data" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $exam_set
 * @property string $dvifa_code
 * @property string $exam_schedule
 * @property integer $desk_no
 * @property string $raw_data
 * @property string $json_data
 * @property string $import_date
 * @property string $modified
 * @property integer $exam_num
 * @property string $omr_serial
 * @property integer $omr_page
 *
 */
abstract class BaseOmrStorageData extends ActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'omr_storage_data';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'OmrStorageData|OmrStorageDatas', $n);
	}

	public static function representingColumn() {
		return 'exam_set';
	}

	public function rules() {
		return array(
			array('exam_set, dvifa_code, exam_schedule, desk_no', 'required'),
			array('desk_no, exam_num, omr_page', 'numerical', 'integerOnly'=>true),
			array('exam_set', 'length', 'max'=>10),
			array('dvifa_code', 'length', 'max'=>13),
			array('exam_schedule', 'length', 'max'=>32),
			array('omr_serial', 'length', 'max'=>6),
			array('raw_data, json_data, import_date, modified', 'safe'),
			array('raw_data, json_data, import_date, modified, exam_num, omr_serial, omr_page', 'default', 'setOnEmpty' => true, 'value' => null),
			array('exam_set, dvifa_code, exam_schedule, desk_no, raw_data, json_data, import_date, modified, exam_num, omr_serial, omr_page', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'exam_set' => Yii::t('app', 'Exam Set'),
			'dvifa_code' => Yii::t('app', 'Dvifa Code'),
			'exam_schedule' => Yii::t('app', 'Exam Schedule'),
			'desk_no' => Yii::t('app', 'Desk No'),
			'raw_data' => Yii::t('app', 'Raw Data'),
			'json_data' => Yii::t('app', 'Json Data'),
			'import_date' => Yii::t('app', 'Import Date'),
			'modified' => Yii::t('app', 'Modified'),
			'exam_num' => Yii::t('app', 'Exam Num'),
			'omr_serial' => Yii::t('app', 'Omr Serial'),
			'omr_page' => Yii::t('app', 'Omr Page'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('exam_set', $this->exam_set, true);
		$criteria->compare('dvifa_code', $this->dvifa_code, true);
		$criteria->compare('exam_schedule', $this->exam_schedule, true);
		$criteria->compare('desk_no', $this->desk_no);
		$criteria->compare('raw_data', $this->raw_data, true);
		$criteria->compare('json_data', $this->json_data, true);
		$criteria->compare('import_date', $this->import_date, true);
		$criteria->compare('modified', $this->modified, true);
		$criteria->compare('exam_num', $this->exam_num);
		$criteria->compare('omr_serial', $this->omr_serial, true);
		$criteria->compare('omr_page', $this->omr_page);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}