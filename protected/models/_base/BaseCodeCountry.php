<?php

/**
 * This is the model base class for the table "code_country".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "CodeCountry".
 *
 * Columns in table "code_country" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property string $name_en
 * @property string $name_th
 * @property string $alpha2
 * @property string $alpha3
 * @property string $nationality
 *
 */
abstract class BaseCodeCountry extends ActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'code_country';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'CodeCountry|CodeCountries', $n);
	}

	public static function representingColumn() {
		return 'name_en';
	}

	public function rules() {
		return array(
			array('id', 'required'),
			array('id, alpha3', 'length', 'max'=>3),
			array('name_en, name_th, nationality', 'length', 'max'=>60),
			array('alpha2', 'length', 'max'=>2),
			array('name_en, name_th, alpha2, alpha3, nationality', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name_en, name_th, alpha2, alpha3, nationality', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name_en' => Yii::t('app', 'Name En'),
			'name_th' => Yii::t('app', 'Name Th'),
			'alpha2' => Yii::t('app', 'Alpha2'),
			'alpha3' => Yii::t('app', 'Alpha3'),
			'nationality' => Yii::t('app', 'Nationality'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('name_en', $this->name_en, true);
		$criteria->compare('name_th', $this->name_th, true);
		$criteria->compare('alpha2', $this->alpha2, true);
		$criteria->compare('alpha3', $this->alpha3, true);
		$criteria->compare('nationality', $this->nationality, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}