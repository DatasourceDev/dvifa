<?php

/**
 * This is the model base class for the table "application_exam_answer".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ApplicationExamAnswer".
 *
 * Columns in table "application_exam_answer" available as properties of the model,
 * followed by relations of table "application_exam_answer" available as properties of the model.
 *
 * @property string $exam_application_id
 * @property string $exam_schedule_id
 * @property string $exam_set_id
 * @property integer $task_no
 * @property integer $order_no
 * @property string $answer
 * @property string $expect_answer
 * @property integer $is_correct
 * @property string $created
 * @property string $modified
 *
 * @property ExamApplication $examApplication
 * @property ExamSchedule $examSchedule
 * @property ExamSet $examSet
 */
abstract class BaseApplicationExamAnswer extends ActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'application_exam_answer';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ApplicationExamAnswer|ApplicationExamAnswers', $n);
	}

	public static function representingColumn() {
		return 'exam_set_id';
	}

	public function rules() {
		return array(
			array('exam_application_id, exam_schedule_id, exam_set_id, task_no, order_no', 'required'),
			array('task_no, order_no, is_correct', 'numerical', 'integerOnly'=>true),
			array('exam_application_id, exam_schedule_id, exam_set_id', 'length', 'max'=>10),
			array('answer, expect_answer', 'length', 'max'=>32),
			array('created, modified', 'safe'),
			array('answer, expect_answer, is_correct, created, modified', 'default', 'setOnEmpty' => true, 'value' => null),
			array('exam_application_id, exam_schedule_id, exam_set_id, task_no, order_no, answer, expect_answer, is_correct, created, modified', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'examApplication' => array(self::BELONGS_TO, 'ExamApplication', 'exam_application_id'),
			'examSchedule' => array(self::BELONGS_TO, 'ExamSchedule', 'exam_schedule_id'),
			'examSet' => array(self::BELONGS_TO, 'ExamSet', 'exam_set_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'exam_application_id' => null,
			'exam_schedule_id' => null,
			'exam_set_id' => null,
			'task_no' => Yii::t('app', 'Task No'),
			'order_no' => Yii::t('app', 'Order No'),
			'answer' => Yii::t('app', 'Answer'),
			'expect_answer' => Yii::t('app', 'Expect Answer'),
			'is_correct' => Yii::t('app', 'Is Correct'),
			'created' => Yii::t('app', 'Created'),
			'modified' => Yii::t('app', 'Modified'),
			'examApplication' => null,
			'examSchedule' => null,
			'examSet' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('exam_application_id', $this->exam_application_id);
		$criteria->compare('exam_schedule_id', $this->exam_schedule_id);
		$criteria->compare('exam_set_id', $this->exam_set_id);
		$criteria->compare('task_no', $this->task_no);
		$criteria->compare('order_no', $this->order_no);
		$criteria->compare('answer', $this->answer, true);
		$criteria->compare('expect_answer', $this->expect_answer, true);
		$criteria->compare('is_correct', $this->is_correct);
		$criteria->compare('created', $this->created, true);
		$criteria->compare('modified', $this->modified, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}