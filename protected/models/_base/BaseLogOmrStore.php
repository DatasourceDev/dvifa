<?php

/**
 * This is the model base class for the table "log_omr_store".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "LogOmrStore".
 *
 * Columns in table "log_omr_store" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property string $file_name
 * @property string $created
 * @property string $modified
 * @property integer $status
 * @property integer $image_scaling
 * @property integer $image_quality
 *
 */
abstract class BaseLogOmrStore extends ActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'log_omr_store';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'LogOmrStore|LogOmrStores', $n);
	}

	public static function representingColumn() {
		return 'file_name';
	}

	public function rules() {
		return array(
			array('status, image_scaling, image_quality', 'numerical', 'integerOnly'=>true),
			array('file_name', 'length', 'max'=>60),
			array('created, modified', 'safe'),
			array('file_name, created, modified, status, image_scaling, image_quality', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, file_name, created, modified, status, image_scaling, image_quality', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'file_name' => Yii::t('app', 'File Name'),
			'created' => Yii::t('app', 'Created'),
			'modified' => Yii::t('app', 'Modified'),
			'status' => Yii::t('app', 'Status'),
			'image_scaling' => Yii::t('app', 'Image Scaling'),
			'image_quality' => Yii::t('app', 'Image Quality'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('file_name', $this->file_name, true);
		$criteria->compare('created', $this->created, true);
		$criteria->compare('modified', $this->modified, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('image_scaling', $this->image_scaling);
		$criteria->compare('image_quality', $this->image_quality);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}