<?php

/**
 * This is the model base class for the table "exam_application_exam_set_audit".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ExamApplicationExamSetAudit".
 *
 * Columns in table "exam_application_exam_set_audit" available as properties of the model,
 * followed by relations of table "exam_application_exam_set_audit" available as properties of the model.
 *
 * @property string $exam_application_id
 * @property string $exam_schedule_id
 * @property string $exam_set_id
 * @property integer $id
 * @property string $grade
 * @property integer $score
 * @property string $raw_data
 * @property string $created
 * @property string $modified
 * @property integer $is_border_line
 * @property integer $score_update
 * @property string $grade_update
 * @property string $update_date
 * @property string $update_user_id
 * @property string $approve_id
 * @property integer $is_approved
 * @property integer $is_update
 *
 * @property ExamApplication $examApplication
 * @property ExamSchedule $examSchedule
 * @property ExamSet $examSet
 */
abstract class BaseExamApplicationExamSetAudit extends ActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'exam_application_exam_set_audit';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ExamApplicationExamSetAudit|ExamApplicationExamSetAudits', $n);
	}

	public static function representingColumn() {
		return 'exam_set_id';
	}

	public function rules() {
		return array(
			array('exam_application_id, exam_schedule_id, exam_set_id, id', 'required'),
			array('id, score, is_border_line, score_update, is_approved, is_update', 'numerical', 'integerOnly'=>true),
			array('exam_application_id, exam_schedule_id, exam_set_id, update_user_id, approve_id', 'length', 'max'=>10),
			array('grade, grade_update', 'length', 'max'=>60),
			array('raw_data, created, modified, update_date', 'safe'),
			array('grade, score, raw_data, created, modified, is_border_line, score_update, grade_update, update_date, update_user_id, approve_id, is_approved, is_update', 'default', 'setOnEmpty' => true, 'value' => null),
			array('exam_application_id, exam_schedule_id, exam_set_id, id, grade, score, raw_data, created, modified, is_border_line, score_update, grade_update, update_date, update_user_id, approve_id, is_approved, is_update', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'examApplication' => array(self::BELONGS_TO, 'ExamApplication', 'exam_application_id'),
			'examSchedule' => array(self::BELONGS_TO, 'ExamSchedule', 'exam_schedule_id'),
			'examSet' => array(self::BELONGS_TO, 'ExamSet', 'exam_set_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'exam_application_id' => null,
			'exam_schedule_id' => null,
			'exam_set_id' => null,
			'id' => Yii::t('app', 'ID'),
			'grade' => Yii::t('app', 'Grade'),
			'score' => Yii::t('app', 'Score'),
			'raw_data' => Yii::t('app', 'Raw Data'),
			'created' => Yii::t('app', 'Created'),
			'modified' => Yii::t('app', 'Modified'),
			'is_border_line' => Yii::t('app', 'Is Border Line'),
			'score_update' => Yii::t('app', 'Score Update'),
			'grade_update' => Yii::t('app', 'Grade Update'),
			'update_date' => Yii::t('app', 'Update Date'),
			'update_user_id' => Yii::t('app', 'Update User'),
			'approve_id' => Yii::t('app', 'Approve'),
			'is_approved' => Yii::t('app', 'Is Approved'),
			'is_update' => Yii::t('app', 'Is Update'),
			'examApplication' => null,
			'examSchedule' => null,
			'examSet' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('exam_application_id', $this->exam_application_id);
		$criteria->compare('exam_schedule_id', $this->exam_schedule_id);
		$criteria->compare('exam_set_id', $this->exam_set_id);
		$criteria->compare('id', $this->id);
		$criteria->compare('grade', $this->grade, true);
		$criteria->compare('score', $this->score);
		$criteria->compare('raw_data', $this->raw_data, true);
		$criteria->compare('created', $this->created, true);
		$criteria->compare('modified', $this->modified, true);
		$criteria->compare('is_border_line', $this->is_border_line);
		$criteria->compare('score_update', $this->score_update);
		$criteria->compare('grade_update', $this->grade_update, true);
		$criteria->compare('update_date', $this->update_date, true);
		$criteria->compare('update_user_id', $this->update_user_id, true);
		$criteria->compare('approve_id', $this->approve_id, true);
		$criteria->compare('is_approved', $this->is_approved);
		$criteria->compare('is_update', $this->is_update);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}