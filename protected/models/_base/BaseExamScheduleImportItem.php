<?php

/**
 * This is the model base class for the table "exam_schedule_import_item".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ExamScheduleImportItem".
 *
 * Columns in table "exam_schedule_import_item" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $exam_schedule_import_id
 * @property string $item_no
 * @property string $citizen_no
 * @property string $title_th
 * @property string $title_en
 * @property string $firstname_th
 * @property string $firstname_en
 * @property string $midname_th
 * @property string $midname_en
 * @property string $lastname_th
 * @property string $lastname_en
 * @property string $birth_date
 * @property string $birth_city
 * @property integer $nationality_id
 * @property string $mobile
 * @property string $email
 * @property string $level
 * @property string $department
 * @property string $passport_no
 * @property string $passport_issuer
 * @property string $passport_issue_date
 * @property string $passport_expire_date
 * @property string $created
 * @property string $modified
 * @property integer $status
 * @property string $comment
 * @property integer $row_ref
 *
 */
abstract class BaseExamScheduleImportItem extends ActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'exam_schedule_import_item';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ExamScheduleImportItem|ExamScheduleImportItems', $n);
	}

	public static function representingColumn() {
		return 'citizen_no';
	}

	public function rules() {
		return array(
			array('exam_schedule_import_id', 'required'),
			array('nationality_id, status, row_ref', 'numerical', 'integerOnly'=>true),
			array('exam_schedule_import_id', 'length', 'max'=>10),
			array('citizen_no', 'length', 'max'=>13),
			array('title_th, title_en, midname_th, midname_en, birth_city, mobile, email, level, department, passport_no, passport_issuer', 'length', 'max'=>60),
			array('firstname_th, firstname_en, lastname_th, lastname_en', 'length', 'max'=>160),
			array('birth_date, passport_issue_date, passport_expire_date, created, modified, comment', 'safe'),
			array('citizen_no, title_th, title_en, firstname_th, firstname_en, midname_th, midname_en, lastname_th, lastname_en, birth_date, birth_city, nationality_id, mobile, email, level, department, passport_no, passport_issuer, passport_issue_date, passport_expire_date, created, modified, status, comment, row_ref', 'default', 'setOnEmpty' => true, 'value' => null),
			array('exam_schedule_import_id, item_no, citizen_no, title_th, title_en, firstname_th, firstname_en, midname_th, midname_en, lastname_th, lastname_en, birth_date, birth_city, nationality_id, mobile, email, level, department, passport_no, passport_issuer, passport_issue_date, passport_expire_date, created, modified, status, comment, row_ref', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'exam_schedule_import_id' => Yii::t('app', 'Exam Schedule Import'),
			'item_no' => Yii::t('app', 'Item No'),
			'citizen_no' => Yii::t('app', 'Citizen No'),
			'title_th' => Yii::t('app', 'Title Th'),
			'title_en' => Yii::t('app', 'Title En'),
			'firstname_th' => Yii::t('app', 'Firstname Th'),
			'firstname_en' => Yii::t('app', 'Firstname En'),
			'midname_th' => Yii::t('app', 'Midname Th'),
			'midname_en' => Yii::t('app', 'Midname En'),
			'lastname_th' => Yii::t('app', 'Lastname Th'),
			'lastname_en' => Yii::t('app', 'Lastname En'),
			'birth_date' => Yii::t('app', 'Birth Date'),
			'birth_city' => Yii::t('app', 'Birth City'),
			'nationality_id' => Yii::t('app', 'Nationality'),
			'mobile' => Yii::t('app', 'Mobile'),
			'email' => Yii::t('app', 'Email'),
			'level' => Yii::t('app', 'Level'),
			'department' => Yii::t('app', 'Department'),
			'passport_no' => Yii::t('app', 'Passport No'),
			'passport_issuer' => Yii::t('app', 'Passport Issuer'),
			'passport_issue_date' => Yii::t('app', 'Passport Issue Date'),
			'passport_expire_date' => Yii::t('app', 'Passport Expire Date'),
			'created' => Yii::t('app', 'Created'),
			'modified' => Yii::t('app', 'Modified'),
			'status' => Yii::t('app', 'Status'),
			'comment' => Yii::t('app', 'Comment'),
			'row_ref' => Yii::t('app', 'Row Ref'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('exam_schedule_import_id', $this->exam_schedule_import_id, true);
		$criteria->compare('item_no', $this->item_no, true);
		$criteria->compare('citizen_no', $this->citizen_no, true);
		$criteria->compare('title_th', $this->title_th, true);
		$criteria->compare('title_en', $this->title_en, true);
		$criteria->compare('firstname_th', $this->firstname_th, true);
		$criteria->compare('firstname_en', $this->firstname_en, true);
		$criteria->compare('midname_th', $this->midname_th, true);
		$criteria->compare('midname_en', $this->midname_en, true);
		$criteria->compare('lastname_th', $this->lastname_th, true);
		$criteria->compare('lastname_en', $this->lastname_en, true);
		$criteria->compare('birth_date', $this->birth_date, true);
		$criteria->compare('birth_city', $this->birth_city, true);
		$criteria->compare('nationality_id', $this->nationality_id);
		$criteria->compare('mobile', $this->mobile, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('level', $this->level, true);
		$criteria->compare('department', $this->department, true);
		$criteria->compare('passport_no', $this->passport_no, true);
		$criteria->compare('passport_issuer', $this->passport_issuer, true);
		$criteria->compare('passport_issue_date', $this->passport_issue_date, true);
		$criteria->compare('passport_expire_date', $this->passport_expire_date, true);
		$criteria->compare('created', $this->created, true);
		$criteria->compare('modified', $this->modified, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('comment', $this->comment, true);
		$criteria->compare('row_ref', $this->row_ref);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}