<?php

/**
 * This is the model base class for the table "exam_set".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ExamSet".
 *
 * Columns in table "exam_set" available as properties of the model,
 * followed by relations of table "exam_set" available as properties of the model.
 *
 * @property string $id
 * @property string $exam_type_id
 * @property string $exam_subject_id
 * @property string $exam_subject_code
 * @property string $exam_topic_code
 * @property string $exam_num
 * @property string $exam_year
 * @property string $created
 * @property string $modified
 * @property integer $is_grade_set
 *
 * @property ApplicationExamAnswer[] $applicationExamAnswers
 * @property ApplicationOmr[] $applicationOmrs
 * @property ExamApplicationExamSetAudit[] $examApplicationExamSetAudits
 * @property ExamSubject $examSubject
 * @property ExamType $examType
 * @property ExamSetGrade[] $examSetGrades
 * @property ExamSetTask[] $examSetTasks
 * @property ExamSetTaskItem[] $examSetTaskItems
 */
abstract class BaseExamSet extends ActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'exam_set';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ExamSet|ExamSets', $n);
	}

	public static function representingColumn() {
		return 'id';
	}

	public function rules() {
		return array(
			array('id, exam_type_id, exam_subject_id', 'required'),
			array('is_grade_set', 'numerical', 'integerOnly'=>true),
			array('id, exam_type_id, exam_subject_id', 'length', 'max'=>10),
			array('exam_subject_code', 'length', 'max'=>1),
			array('exam_topic_code, exam_num', 'length', 'max'=>2),
			array('exam_year', 'length', 'max'=>4),
			array('created, modified', 'safe'),
			array('exam_subject_code, exam_topic_code, exam_num, exam_year, created, modified, is_grade_set', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, exam_type_id, exam_subject_id, exam_subject_code, exam_topic_code, exam_num, exam_year, created, modified, is_grade_set', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'applicationExamAnswers' => array(self::HAS_MANY, 'ApplicationExamAnswer', 'exam_set_id'),
			'applicationOmrs' => array(self::HAS_MANY, 'ApplicationOmr', 'exam_set_id'),
			'examApplicationExamSetAudits' => array(self::HAS_MANY, 'ExamApplicationExamSetAudit', 'exam_set_id'),
			'examSubject' => array(self::BELONGS_TO, 'ExamSubject', 'exam_subject_id'),
			'examType' => array(self::BELONGS_TO, 'ExamType', 'exam_type_id'),
			'examSetGrades' => array(self::HAS_MANY, 'ExamSetGrade', 'exam_set_id'),
			'examSetTasks' => array(self::HAS_MANY, 'ExamSetTask', 'exam_set_id'),
			'examSetTaskItems' => array(self::HAS_MANY, 'ExamSetTaskItem', 'exam_set_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'exam_type_id' => null,
			'exam_subject_id' => null,
			'exam_subject_code' => Yii::t('app', 'Exam Subject Code'),
			'exam_topic_code' => Yii::t('app', 'Exam Topic Code'),
			'exam_num' => Yii::t('app', 'Exam Num'),
			'exam_year' => Yii::t('app', 'Exam Year'),
			'created' => Yii::t('app', 'Created'),
			'modified' => Yii::t('app', 'Modified'),
			'is_grade_set' => Yii::t('app', 'Is Grade Set'),
			'applicationExamAnswers' => null,
			'applicationOmrs' => null,
			'examApplicationExamSetAudits' => null,
			'examSubject' => null,
			'examType' => null,
			'examSetGrades' => null,
			'examSetTasks' => null,
			'examSetTaskItems' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('exam_type_id', $this->exam_type_id);
		$criteria->compare('exam_subject_id', $this->exam_subject_id);
		$criteria->compare('exam_subject_code', $this->exam_subject_code, true);
		$criteria->compare('exam_topic_code', $this->exam_topic_code, true);
		$criteria->compare('exam_num', $this->exam_num, true);
		$criteria->compare('exam_year', $this->exam_year, true);
		$criteria->compare('created', $this->created, true);
		$criteria->compare('modified', $this->modified, true);
		$criteria->compare('is_grade_set', $this->is_grade_set);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}