<?php

/**
 * This is the model base class for the table "profile_change_department".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ProfileChangeDepartment".
 *
 * Columns in table "profile_change_department" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property integer $account_id
 * @property string $department_type_original
 * @property string $department_original
 * @property string $office_original
 * @property string $position_original
 * @property string $level_original
 * @property string $department_type
 * @property string $department
 * @property string $office
 * @property string $position
 * @property string $level
 * @property string $created
 * @property string $modified
 *
 */
abstract class BaseProfileChangeDepartment extends ActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'profile_change_department';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ProfileChangeDepartment|ProfileChangeDepartments', $n);
	}

	public static function representingColumn() {
		return 'department_type_original';
	}

	public function rules() {
		return array(
			array('account_id', 'numerical', 'integerOnly'=>true),
			array('department_type_original, office_original, position_original, level_original, department_type, office, position, level', 'length', 'max'=>60),
			array('department_original, department', 'length', 'max'=>200),
			array('created, modified', 'safe'),
			array('account_id, department_type_original, department_original, office_original, position_original, level_original, department_type, department, office, position, level, created, modified', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, account_id, department_type_original, department_original, office_original, position_original, level_original, department_type, department, office, position, level, created, modified', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'account_id' => Yii::t('app', 'Account'),
			'department_type_original' => Yii::t('app', 'Department Type Original'),
			'department_original' => Yii::t('app', 'Department Original'),
			'office_original' => Yii::t('app', 'Office Original'),
			'position_original' => Yii::t('app', 'Position Original'),
			'level_original' => Yii::t('app', 'Level Original'),
			'department_type' => Yii::t('app', 'Department Type'),
			'department' => Yii::t('app', 'Department'),
			'office' => Yii::t('app', 'Office'),
			'position' => Yii::t('app', 'Position'),
			'level' => Yii::t('app', 'Level'),
			'created' => Yii::t('app', 'Created'),
			'modified' => Yii::t('app', 'Modified'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('account_id', $this->account_id);
		$criteria->compare('department_type_original', $this->department_type_original, true);
		$criteria->compare('department_original', $this->department_original, true);
		$criteria->compare('office_original', $this->office_original, true);
		$criteria->compare('position_original', $this->position_original, true);
		$criteria->compare('level_original', $this->level_original, true);
		$criteria->compare('department_type', $this->department_type, true);
		$criteria->compare('department', $this->department, true);
		$criteria->compare('office', $this->office, true);
		$criteria->compare('position', $this->position, true);
		$criteria->compare('level', $this->level, true);
		$criteria->compare('created', $this->created, true);
		$criteria->compare('modified', $this->modified, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}