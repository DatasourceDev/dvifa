<?php

/**
 * This is the model base class for the table "account_profile".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "AccountProfile".
 *
 * Columns in table "account_profile" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property string $account_type_id
 * @property string $account_type
 * @property string $username
 * @property integer $status
 * @property string $title
 * @property string $firstname
 * @property string $midname
 * @property string $lastname
 * @property string $title_id_th
 * @property string $firstname_th
 * @property string $midname_th
 * @property string $lastname_th
 * @property string $title_id_en
 * @property string $firstname_en
 * @property string $midname_en
 * @property string $lastname_en
 * @property string $department
 * @property string $position
 * @property string $level
 * @property string $email
 * @property string $src_created
 *
 */
abstract class BaseAccountProfile extends ActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'account_profile';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'AccountProfile|AccountProfiles', $n);
	}

	public static function representingColumn() {
		return 'account_type';
	}

	public function rules() {
		return array(
			array('status', 'numerical', 'integerOnly'=>true),
			array('id, account_type_id', 'length', 'max'=>10),
			array('account_type, username, title, firstname_th, midname_th, lastname_th, firstname_en, midname_en, lastname_en, position, level, email', 'length', 'max'=>60),
			array('firstname, midname, lastname', 'length', 'max'=>121),
			array('title_id_th, title_id_en', 'length', 'max'=>1),
			array('department', 'length', 'max'=>250),
			array('src_created', 'safe'),
			array('id, account_type_id, account_type, username, status, title, firstname, midname, lastname, title_id_th, firstname_th, midname_th, lastname_th, title_id_en, firstname_en, midname_en, lastname_en, department, position, level, email, src_created', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, account_type_id, account_type, username, status, title, firstname, midname, lastname, title_id_th, firstname_th, midname_th, lastname_th, title_id_en, firstname_en, midname_en, lastname_en, department, position, level, email, src_created', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'account_type_id' => Yii::t('app', 'Account Type'),
			'account_type' => Yii::t('app', 'Account Type'),
			'username' => Yii::t('app', 'Username'),
			'status' => Yii::t('app', 'Status'),
			'title' => Yii::t('app', 'Title'),
			'firstname' => Yii::t('app', 'Firstname'),
			'midname' => Yii::t('app', 'Midname'),
			'lastname' => Yii::t('app', 'Lastname'),
			'title_id_th' => Yii::t('app', 'Title Id Th'),
			'firstname_th' => Yii::t('app', 'Firstname Th'),
			'midname_th' => Yii::t('app', 'Midname Th'),
			'lastname_th' => Yii::t('app', 'Lastname Th'),
			'title_id_en' => Yii::t('app', 'Title Id En'),
			'firstname_en' => Yii::t('app', 'Firstname En'),
			'midname_en' => Yii::t('app', 'Midname En'),
			'lastname_en' => Yii::t('app', 'Lastname En'),
			'department' => Yii::t('app', 'Department'),
			'position' => Yii::t('app', 'Position'),
			'level' => Yii::t('app', 'Level'),
			'email' => Yii::t('app', 'Email'),
			'src_created' => Yii::t('app', 'Src Created'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('account_type_id', $this->account_type_id, true);
		$criteria->compare('account_type', $this->account_type, true);
		$criteria->compare('username', $this->username, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('firstname', $this->firstname, true);
		$criteria->compare('midname', $this->midname, true);
		$criteria->compare('lastname', $this->lastname, true);
		$criteria->compare('title_id_th', $this->title_id_th, true);
		$criteria->compare('firstname_th', $this->firstname_th, true);
		$criteria->compare('midname_th', $this->midname_th, true);
		$criteria->compare('lastname_th', $this->lastname_th, true);
		$criteria->compare('title_id_en', $this->title_id_en, true);
		$criteria->compare('firstname_en', $this->firstname_en, true);
		$criteria->compare('midname_en', $this->midname_en, true);
		$criteria->compare('lastname_en', $this->lastname_en, true);
		$criteria->compare('department', $this->department, true);
		$criteria->compare('position', $this->position, true);
		$criteria->compare('level', $this->level, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('src_created', $this->src_created, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}